{"version":3,"sources":["data/services/DataStructureService.js","data/services/ApiService.js","data/services/mockStructure.js","data/actions/StyleActions.js","views/components/StyleContainer.js","views/components/HtmlContainer.js","App.js","serviceWorker.js","data/reducers/StyleReducer.js","data/reducers/index.js","index.js"],"names":["DataStructureService","get","_get","Object","_Users_hanashiro_Desktop_tw_front_playground_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_hanashiro_Desktop_tw_front_playground_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","_getQueryParams","playgroundData","codeElement","wrap","_context","prev","next","getQueryParams","document","querySelector","endsWith","abrupt","ApiService","Promise","resolve","JSON","parse","innerText","window","twPlaygroundData","mock","stop","apply","this","arguments","pair","i","pairs","location","search","substring","split","obj","decodeURIComponent","getObjectFromJSText","url","fetch","then","response","text","content","some","item","includes","every","replace","evaluatedData","eval","__webpack_require__","d","__webpack_exports__","endpoint","concat","json","copy_text_to_clipboard__WEBPACK_IMPORTED_MODULE_0__","copy_text_to_clipboard__WEBPACK_IMPORTED_MODULE_0___default","n","data","html","initial","controllers","css","selector","props","name","value","type","valueSuffix","hideTextValue","options","onValue","offValue","checkName","properties","getMockData","copy","stringify","listResponse","styleList","cssUpdate","prop","StyleContainer","state","currentClassEditing","currentElementHighlightStyle","_this","onChange","dispatch","StyleConstants","onClassMouseEnter","event","currentTarget","getAttribute","setState","onClassMouseLeave","forEach","controller","__html","_this2","length","react_default","createElement","dangerouslySetInnerHTML","controllersToCssString","className","map","onMouseMove","onMouseLeave","data-selector","avoidHighlight","key","Fragment","ControllerComponent","Component","SelectComponent","RangeComponent","CheckComponent","RadioComponent","ColorComponent","TextComponent","NumberComponent","_ref","option","inputProps","assign","_ref2","isChecked","checked","_ref3","_ref4","_ref5","_ref6","_ref7","defaultProps","HtmlContainer","createHtml","App","asyncToGenerator","regenerator_default","sent","_x","dataStructure","components_StyleContainer","components_HtmlContainer","connect","StyleReducer","Boolean","hostname","match","initialState","style","undefined","action","newProps","newObject","combineReducers","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3203a5c6.chunk.js","sourcesContent":["import { ApiService } from './ApiService';\n\nimport mock from './mockStructure';\n\nexport const DataStructureService = {\n    async get(){\n        const {playgroundData} = getQueryParams(),\n          codeElement = document.querySelector('#twPlaygroundData');\n        if(playgroundData){\n          if(playgroundData.endsWith('.json')){\n            return ApiService.get(playgroundData);\n          }/*else if(playgroundData.endsWith('.js') && window.location.origin.startsWith('http://localhost:3000')){\n            return getObjectFromJSText(playgroundData);\n          }*/\n        }else if(codeElement){\n          return Promise.resolve(JSON.parse(codeElement.innerText));\n        }else if(window.twPlaygroundData){\n          return Promise.resolve(window.twPlaygroundData);\n        }\n        return Promise.resolve(mock);\n    }\n};\n\n\nfunction getQueryParams() {\n    var pairs = window.location.search.substring(1).split(\"&\"),\n      obj = {},\n      pair,\n      i;\n  \n    for ( i in pairs ) {\n      if ( pairs[i] === \"\" ) continue;\n  \n      pair = pairs[i].split(\"=\");\n      obj[ decodeURIComponent( pair[0] ) ] = decodeURIComponent( pair[1] );\n    }\n  \n    return obj;\n  }\n\nfunction getObjectFromJSText(url){\n  return fetch(url)\n    .then(response => response.text())\n    .then(content => {\n      const toAvoid = ['var ', 'eval', 'function','if ', 'if(', 'class ', '=>', 'debugger', 'new ', 'import ', 'import(', 'promise', 'then', 'await ', 'fetch'],\n        toHave = ['const data = {', 'export default data;'];\n      if(toAvoid.some(item => content.includes(item)) || !toHave.every(item => content.includes(item))){\n          return '';\n      }\n      return content;\n    })\n    .then(text => text.replace('export default data;', ''))\n    .then(text => {\n      let evaluatedData = '';\n      eval(text + 'evaluatedData = data');\n      return evaluatedData;\n    });\n}","const api = '';\n\nexport const ApiService = {\n    get(endpoint){\n        return fetch(`${api}${endpoint}`)\n            .then(response => response.json());\n    }\n};","import copy from 'copy-text-to-clipboard';\n\nconst data = {\n    html: {\n        initial: `\n<div class=\"container\" >\n    <div class=\"item\" ></div>\n    <div class=\"item\" ></div>\n    <div class=\"item\" ></div>\n    <div class=\"item\" ></div>\n    <div class=\"item\" ></div>\n    <div class=\"item\" ></div>\n</div>\n        `,\n        controllers: [\n\n        ]\n    },\n    css: {\n        initial: `\n.container{\nborder: 2px solid black;\nbackground-color: #0265ad;\n}\n.item{\nborder: 2px solid black;\nbackground-color: #a2cff0;\nheight: 50px;\n}\n        `,\n        controllers: [\n            {\n                selector: '.container',\n                props: [\n                    {\n                        name: 'display',\n                        value: 'inline-block',\n                        type: 'string'\n                    },\n                    {\n                        name: 'width',\n                        value: '50',\n                        valueSuffix: '%',\n                        type: 'number',\n                        hideTextValue: true\n                    },\n                    {\n                        name: 'grid-template-columns',\n                        value: '1fr',\n                        hideTextValue: true,\n                        type: 'text',\n                    }\n                ]\n            },\n            {\n                selector: '.item',\n                props: [\n                    {\n                        name: 'display',\n                        value: 'inline-block',\n                        type: 'radio',\n                        hideTextValue: true,\n                        options: [\n                            {\n                                value: 'block'\n                            },\n                            {\n                                value: 'inline-block'\n                            },\n                            {\n                                value: 'inline'\n                            }\n                        ]\n                    },\n                    {\n                        name: 'text-align',\n                        value: 'initial',\n                        type: 'check',\n                        onValue: 'right',\n                        offValue: 'initial',\n                        checkName: 'right',\n                        hideTextValue: true,\n                    },\n                    {\n                        name: 'width',\n                        value: '30',\n                        valueSuffix: '%',\n                        type: 'range',\n                        properties: [\n                            {\n                                name: 'min',\n                                value: '10'\n                            },\n                            {\n                                name: 'max',\n                                value: '100'\n                            },\n                            {\n                                name: 'step',\n                                value: '10'\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    },\n};\n\nexport default data;\n\nwindow.getMockData = () => {\n    copy(JSON.stringify(data));\n}","import { DataStructureService } from '../services/DataStructureService';\n\nexport const STYLE_LIST = 'TODO_LIST';\nexport const STYLE_LIST_RESPONSE = 'TODO_LIST_RESPONSE';\nexport const STYLE_UPDATE = 'TODO_UPDATE';\n\nexport const list = (dispatch) => {\n    return async (dispatch) => {\n        const response = await DataStructureService.get();\n        dispatch(listResponse(response));\n    }\n}\n\nexport const listResponse = (styleList) => {\n    return {\n        type: STYLE_LIST_RESPONSE,\n        styleList\n    }\n}\n\nexport const cssUpdate = (selector, prop) => {\n    return {\n        type: STYLE_UPDATE,\n        selector,\n        prop\n    }\n}","import React, { Component } from 'react';\n\nimport * as StyleConstants from '../../data/actions/StyleActions';\n\nclass StyleContainer extends Component{\n    static defaultProps = {\n        initial: '',\n        controllers: []\n    }\n\n    state = {\n        currentClassEditing: null\n    }\n\n    controllersToCssString(){\n        const controllers = this.props.controllers;\n        let css = '';\n        controllers.forEach(controller => {\n            css += `${controller.selector}{`;\n            controller.props.forEach(prop => {\n                css += `${prop.name}: ${prop.value}${prop.valueSuffix || ''};`;\n            })\n            css += `}`;\n        })\n        css += this.currentElementHighlightStyle();\n        return {'__html': css};\n    }\n\n    currentElementHighlightStyle = () => {\n        const { currentClassEditing } = this.state;\n        if(currentClassEditing){\n            const css = `${currentClassEditing}{\n                animation-name: tw-anim-element-highlight;\n                animation-duration: .6s;\n                animation-iteration-count: infinite;\n                animation-direction: alternate;\n                animation-timing-function: ease-in-out;\n            }`;\n            return css;\n        }\n        return '';\n    }\n\n    onChange = (selector, prop) => {\n        this.props.dispatch(StyleConstants.cssUpdate(selector, prop));\n    }\n\n    onClassMouseEnter = (event) => {\n        const currentClassEditing = event.currentTarget.getAttribute('data-selector');\n        this.setState({currentClassEditing});\n    }\n    onClassMouseLeave = (event) => {\n        const currentClassEditing = null;\n        this.setState({currentClassEditing});\n    }\n\n    render(){\n        const { props } = this,\n            { controllers } = props;\n        if(controllers.length === 0){\n            return <style>{props.initial}</style>;\n        }\n        \n        return (\n            <div>\n                <style>{props.initial}</style>\n                <style dangerouslySetInnerHTML={this.controllersToCssString()} ></style>\n                <div className=\"tw-code-container\">\n                    {\n                        controllers.map(controller => {\n                            return (\n                                <div onMouseMove={this.onClassMouseEnter} onMouseLeave={this.onClassMouseLeave} className=\"tw-css-selector-container\" data-selector={controller.avoidHighlight ? '' : controller.selector}  key={controller.selector} >\n                                    <div><span className=\"tw-css-selector\">{controller.selector}</span> {'{'}</div>\n                                    <div className=\"tw-css-body\" >\n                                        {\n                                            controller.props.map(prop => { \n                                                const value = prop.hideTextValue ? '' : `${prop.value}${prop.valueSuffix || ''};`;\n                                                return (\n                                                    <React.Fragment key={prop.name} >\n                                                        <span className=\"tw-css-property\">{prop.name}<span className=\"tw-punctuation\">:</span></span>\n                                                        <div className=\"tw-css-value\">{value}\n                                                            {\n                                                                prop.type === 'string' ? '' : <div className=\"tw-css-controller-container\" >\n                                                                    <ControllerComponent  prop={prop} onChange={this.onChange} controller={controller} />\n                                                                    \n                                                                </div>\n                                                            }\n                                                        </div>\n                                                    </React.Fragment>\n                                                );\n                                            })\n                                        }\n                                    </div>\n                                    <div>{'}'}</div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        );\n        \n    }\n}\n\nfunction ControllerComponent(props){\n    switch(props.prop.type){\n        case 'select':  return <SelectComponent {...props} />;\n        case 'range': return <RangeComponent {...props} />;\n        case 'check': return <CheckComponent {...props} />;\n        case 'radio': return <RadioComponent {...props} />;\n        case 'color': return <ColorComponent {...props} />;\n        case 'text': return <TextComponent {...props} />;\n        case 'number': return <NumberComponent {...props} />;\n        default: return '';\n    }\n}\n\nfunction SelectComponent(props){\n    const {prop, controller, onChange} = props;\n    return (\n        <select value={prop.value} onChange={({currentTarget}) => {onChange(controller.selector, {name: prop.name, value: currentTarget.value})}} >\n            {\n                prop.options.map(option => {\n                    return (\n                        <option key={option.value} value={option.value} >{option.name || option.value}</option>\n                    );\n                })\n            }\n        </select>\n    );\n}\n\nfunction RangeComponent(props){\n    const {prop, controller, onChange} = props;\n    const inputProps = {};\n    if(prop.properties){\n        prop.properties.forEach(prop => inputProps[prop.name] = prop.value);\n    }\n    return (<input type=\"range\" value={prop.value} {...inputProps} onChange={({currentTarget}) => {onChange(controller.selector, {name: prop.name, value: currentTarget.value})}} />);\n}\n\nfunction CheckComponent(props){\n    const {prop, controller, onChange} = props,\n        isChecked = prop.onValue === prop.value;\n    return (\n        <div>\n            <label className=\"tw-label\" >\n                <input checked={isChecked} type=\"checkbox\" value={prop.value} onChange={({currentTarget}) => {onChange(controller.selector, {name: prop.name, value: (isChecked ? prop.offValue : prop.onValue)})}} />\n                {prop.checkName || prop.value}\n            </label>\n        </div>\n    );\n}\n\nfunction RadioComponent(props){\n    const {prop, controller, onChange} = props;\n    return (\n        <div>\n            {prop.options.map(option => {\n                const name = `${controller.selector}-${prop.name}`;\n                return (\n                    <label className=\"tw-label\" key={option.value} >\n                        <input checked={option.value === prop.value} name={name} type=\"radio\" value={option.value} onChange={({currentTarget}) => {onChange(controller.selector, {name: prop.name, value: currentTarget.value})}} />\n                        {option.name || option.value}\n                    </label>\n                )\n            })}\n        </div>\n    );\n}\n\nfunction ColorComponent(props){\n    const {prop, controller, onChange} = props;\n\n    return (<input type=\"color\" value={prop.value} onChange={({currentTarget}) => {onChange(controller.selector, {name: prop.name, value: currentTarget.value})}} />);\n}\n\nfunction TextComponent(props){\n    const {prop, controller, onChange} = props,\n        value = prop.value.replace(/[:;]/gi, '');\n\n    return (<input type=\"text\" className=\"tw-input\" value={value} onChange={({currentTarget}) => {onChange(controller.selector, {name: prop.name, value: currentTarget.value})}} />);\n}\n\nfunction NumberComponent(props){\n    const {prop, controller, onChange} = props,\n        valueSuffix = prop.valueSuffix || '';\n\n    return (\n        <label>\n            <input type=\"number\" className=\"tw-input\" value={prop.value} onChange={({currentTarget}) => {onChange(controller.selector, {name: prop.name, value: currentTarget.value})}} />\n            { valueSuffix }\n        </label>\n    );\n}\n\nexport default StyleContainer;","import React, { Component } from 'react';\n\nclass HtmlContainer extends Component{\n    static defaultProps = {\n        initial: '',\n        controllers: []\n    }\n\n    createHtml(){\n        return {'__html': this.props.initial};\n    }\n\n    render(){\n        const { props } = this,\n            { controllers } = props;\n        return(\n            <div dangerouslySetInnerHTML={this.createHtml()} className=\"htmlContainer\" >\n                \n            </div>\n        );\n    }\n}\n\nexport default HtmlContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\n\nimport * as StyleActions from './data/actions/StyleActions';\n\nimport StyleContainer from './views/components/StyleContainer';\nimport HtmlContainer from './views/components/HtmlContainer';\n\nclass App extends Component {\n\n  async componentDidMount(){\n    this.props.dispatch(StyleActions.list());\n  }\n\n  render() {\n    const {props} = this,\n      css = props.dataStructure.css,\n      html = props.dataStructure.html,\n      dispatch = props.dispatch;\n    if(!css || !css.initial){\n      return (\n        <div className=\"tw-loading\">\n          Carregando\n          TreinaWeb Playground\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <div>\n          <StyleContainer initial={css.initial} controllers={css.controllers} dispatch={dispatch} />\n        </div>\n        <div>\n          <HtmlContainer initial={html.initial} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  dataStructure: state.StyleReducer\n})\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as StyleConstants from '../actions/StyleActions';\n\nconst initialState = {\n    html: {initial: '', controllers: []},\n    css: {initial: '', controllers: []}\n}\n\nconst StyleReducer = (style = initialState, action) => {\n    switch(action.type){\n        case StyleConstants.STYLE_LIST_RESPONSE: \n            return action.styleList;\n        case StyleConstants.STYLE_UPDATE: \n            const controllers = style.css.controllers.map(controller => {\n                if(controller.selector !== action.selector){\n                    return controller;\n                }\n                const newProps = controller.props.map(prop => {\n                    if(prop.name !== action.prop.name){\n                        return prop;\n                    }\n                    return Object.assign({}, prop, action.prop);\n                });\n                return {\n                    selector: controller.selector,\n                    props: newProps\n                }\n            });\n            const newObject = {\n                css: {\n                    initial: style.css.initial,\n                    controllers\n                }\n            };\n            return Object.assign({}, style, newObject);\n        default: return style;\n    }\n}\n\nexport default StyleReducer;","import { combineReducers } from 'redux';\n\nimport StyleReducer from './StyleReducer';\n\nexport default combineReducers({\n    StyleReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './data/reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}