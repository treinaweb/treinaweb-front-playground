{"version":3,"sources":["data/services/ApiService.js","data/services/DataStructureService.js","data/actions/StyleActions.js","views/components/StyleContainer.js","views/components/HtmlContainer.js","App.js","serviceWorker.js","data/reducers/StyleReducer.js","data/reducers/index.js","index.js"],"names":["ApiService","endpoint","console","log","fetch","concat","then","response","json","DataStructureService","get","_get","Object","asyncToGenerator","regenerator_default","a","mark","_callee","_getQueryParams","playgroundData","wrap","_context","prev","next","getQueryParams","abrupt","stop","apply","this","arguments","pair","i","pairs","window","location","search","substring","split","obj","decodeURIComponent","listResponse","styleList","type","cssUpdate","selector","prop","StyleContainer","state","currentClassEditing","currentElementHighlightStyle","_this","onChange","props","dispatch","StyleConstants","onClassMouseEnter","event","currentTarget","getAttribute","setState","onClassMouseLeave","controllers","css","forEach","controller","name","value","valueSuffix","__html","_this2","length","react_default","createElement","initial","dangerouslySetInnerHTML","controllersToCssString","className","map","onMouseMove","onMouseLeave","data-selector","avoidHighlight","key","hideTextValue","Fragment","ControllerComponent","Component","SelectComponent","RangeComponent","CheckComponent","RadioComponent","ColorComponent","_ref","options","option","inputProps","properties","assign","onInput","_ref2","isChecked","onValue","checked","_ref3","offValue","checkName","_ref4","_ref5","defaultProps","HtmlContainer","createHtml","App","sent","_x","dataStructure","html","components_StyleContainer","components_HtmlContainer","connect","StyleReducer","Boolean","hostname","match","initialState","style","undefined","action","newProps","newObject","combineReducers","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7428b1dc.chunk.js","sourcesContent":["const api = '';\n\nexport const ApiService = {\n    get(endpoint){\n        console.log(endpoint)\n\n        return fetch(`${api}${endpoint}`)\n            .then(response => response.json());\n    }\n};","import { ApiService } from './ApiService';\n\nexport const DataStructureService = {\n    async get(){\n        const {playgroundData} = getQueryParams();\n        if(playgroundData){\n            return ApiService.get(playgroundData);\n        }\n    }\n};\n\n\nfunction getQueryParams() {\n    var pairs = window.location.search.substring(1).split(\"&\"),\n      obj = {},\n      pair,\n      i;\n  \n    for ( i in pairs ) {\n      if ( pairs[i] === \"\" ) continue;\n  \n      pair = pairs[i].split(\"=\");\n      obj[ decodeURIComponent( pair[0] ) ] = decodeURIComponent( pair[1] );\n    }\n  \n    return obj;\n  }","import { DataStructureService } from '../services/DataStructureService';\n\nexport const STYLE_LIST = 'TODO_LIST';\nexport const STYLE_LIST_RESPONSE = 'TODO_LIST_RESPONSE';\nexport const STYLE_UPDATE = 'TODO_UPDATE';\n\nexport const list = (dispatch) => {\n    return async (dispatch) => {\n        const response = await DataStructureService.get();\n        dispatch(listResponse(response));\n    }\n}\n\nexport const listResponse = (styleList) => {\n    return {\n        type: STYLE_LIST_RESPONSE,\n        styleList\n    }\n}\n\nexport const cssUpdate = (selector, prop) => {\n    return {\n        type: STYLE_UPDATE,\n        selector,\n        prop\n    }\n}","import React, { Component } from 'react';\n\nimport * as StyleConstants from '../../data/actions/StyleActions';\n\nclass StyleContainer extends Component{\n    static defaultProps = {\n        initial: '',\n        controllers: []\n    }\n\n    state = {\n        currentClassEditing: null\n    }\n\n    controllersToCssString(){\n        const controllers = this.props.controllers;\n        let css = '';\n        controllers.forEach(controller => {\n            css += `${controller.selector}{`;\n            controller.props.forEach(prop => {\n                css += `${prop.name}: ${prop.value}${prop.valueSuffix || ''};`;\n            })\n            css += `}`;\n        })\n        css += this.currentElementHighlightStyle();\n        return {'__html': css};\n    }\n\n    currentElementHighlightStyle = () => {\n        const { currentClassEditing } = this.state;\n        if(currentClassEditing){\n            const css = `${currentClassEditing}{\n                animation-name: tw-anim-element-highlight;\n                animation-duration: .6s;\n                animation-iteration-count: infinite;\n                animation-direction: alternate;\n                animation-timing-function: ease-in-out;\n            }`;\n            return css;\n        }\n        return '';\n    }\n\n    onChange = (selector, prop) => {\n        this.props.dispatch(StyleConstants.cssUpdate(selector, prop));\n    }\n\n    onClassMouseEnter = (event) => {\n        const currentClassEditing = event.currentTarget.getAttribute('data-selector');\n        this.setState({currentClassEditing});\n    }\n    onClassMouseLeave = (event) => {\n        const currentClassEditing = null;\n        this.setState({currentClassEditing});\n    }\n\n    render(){\n        const { props } = this,\n            { controllers } = props;\n        if(controllers.length === 0){\n            return <style>{props.initial}</style>;\n        }\n        \n        return (\n            <div>\n                <style>{props.initial}</style>\n                <style dangerouslySetInnerHTML={this.controllersToCssString()} ></style>\n                <div className=\"tw-code-container\">\n                    {\n                        controllers.map(controller => {\n                            return (\n                                <div onMouseMove={this.onClassMouseEnter} onMouseLeave={this.onClassMouseLeave} className=\"tw-css-selector-container\" data-selector={!controller.avoidHighlight ? controller.selector : ''}  key={controller.selector} >\n                                    <div><span className=\"tw-css-selector\">{controller.selector}</span> {'{'}</div>\n                                    <div className=\"tw-css-body\" >\n                                        {\n                                            controller.props.map(prop => { \n                                                const value = prop.hideTextValue ? '' : `${prop.value}${prop.valueSuffix || ''};`;\n                                                return (\n                                                    <React.Fragment key={prop.name} >\n                                                        <span className=\"tw-css-property\">{prop.name}<span className=\"tw-punctuation\">:</span></span>\n                                                        <div className=\"tw-css-value\">{value}\n                                                            {\n                                                                prop.type === 'string' ? '' : <div className=\"tw-css-controller-container\" >\n                                                                    <ControllerComponent  prop={prop} onChange={this.onChange} controller={controller} />\n                                                                    \n                                                                </div>\n                                                            }\n                                                        </div>\n                                                    </React.Fragment>\n                                                );\n                                            })\n                                        }\n                                    </div>\n                                    <div>{'}'}</div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        );\n        \n    }\n}\n\nfunction ControllerComponent(props){\n    switch(props.prop.type){\n        case 'select':  return <SelectComponent {...props} />;\n        case 'range': return <RangeComponent {...props} />;\n        case 'check': return <CheckComponent {...props} />;\n        case 'radio': return <RadioComponent {...props} />;\n        case 'color': return <ColorComponent {...props} />;\n        default: return '';\n    }\n}\n\nfunction SelectComponent(props){\n    const {prop, controller, onChange} = props;\n    return (\n        <select value={prop.value} onChange={({currentTarget}) => {onChange(controller.selector, {name: prop.name, value: currentTarget.value})}} >\n            {\n                prop.options.map(option => {\n                    return (\n                        <option key={option.value} value={option.value} >{option.name || option.value}</option>\n                    );\n                })\n            }\n        </select>\n    );\n}\n\nfunction RangeComponent(props){\n    const {prop, controller, onChange} = props;\n    const inputProps = {};\n    prop.properties.forEach(prop => inputProps[prop.name] = prop.value);\n    return (<input type=\"range\" value={prop.value} {...inputProps} onInput={({currentTarget}) => {onChange(controller.selector, {name: prop.name, value: currentTarget.value})}} />);\n}\n\nfunction CheckComponent(props){\n    const {prop, controller, onChange} = props,\n        isChecked = prop.onValue === prop.value;\n    return (\n        <div>\n            <label className=\"tw-label\" >\n                <input checked={isChecked} type=\"checkbox\" value={prop.value} onChange={({currentTarget}) => {onChange(controller.selector, {name: prop.name, value: (isChecked ? prop.offValue : prop.onValue)})}} />\n                {prop.checkName || prop.value}\n            </label>\n        </div>\n    );\n}\n\nfunction RadioComponent(props){\n    const {prop, controller, onChange} = props;\n    return (\n        <div>\n            {prop.options.map(option => {\n                const name = `${controller.selector}-${prop.name}`;\n                return (\n                    <label className=\"tw-label\" key={option.value} >\n                        <input checked={option.value === prop.value} name={name} type=\"radio\" value={option.value} onChange={({currentTarget}) => {onChange(controller.selector, {name: prop.name, value: currentTarget.value})}} />\n                        {option.name || option.value}\n                    </label>\n                )\n            })}\n        </div>\n    );\n}\n\nfunction ColorComponent(props){\n    const {prop, controller, onChange} = props;\n\n    return (<input type=\"color\" value={prop.value} onInput={({currentTarget}) => {onChange(controller.selector, {name: prop.name, value: currentTarget.value})}} />);\n}\n\nexport default StyleContainer;","import React, { Component } from 'react';\n\nclass HtmlContainer extends Component{\n    static defaultProps = {\n        initial: '',\n        controllers: []\n    }\n\n    createHtml(){\n        return {'__html': this.props.initial};\n    }\n\n    render(){\n        const { props } = this,\n            { controllers } = props;\n        return(\n            <div dangerouslySetInnerHTML={this.createHtml()} className=\"htmlContainer\" >\n                \n            </div>\n        );\n    }\n}\n\nexport default HtmlContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\n\nimport * as StyleActions from './data/actions/StyleActions';\n\nimport StyleContainer from './views/components/StyleContainer';\nimport HtmlContainer from './views/components/HtmlContainer';\n\nclass App extends Component {\n\n  async componentDidMount(){\n    this.props.dispatch(StyleActions.list());\n  }\n\n  render() {\n    const {props} = this,\n      css = props.dataStructure.css,\n      html = props.dataStructure.html,\n      dispatch = props.dispatch;\n\n    if(!css){\n      return (\n        <div className=\"App\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <div>\n          <StyleContainer initial={css.initial} controllers={css.controllers} dispatch={dispatch} />\n        </div>\n        <div>\n          <HtmlContainer initial={html.initial} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  dataStructure: state.StyleReducer\n})\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as StyleConstants from '../actions/StyleActions';\n\nconst initialState = {\n    html: {initial: '', controllers: []},\n    css: {initial: '', controllers: []}\n}\n\nconst StyleReducer = (style = initialState, action) => {\n    switch(action.type){\n        case StyleConstants.STYLE_LIST_RESPONSE: \n            return action.styleList;\n        case StyleConstants.STYLE_UPDATE: \n            const controllers = style.css.controllers.map(controller => {\n                if(controller.selector !== action.selector){\n                    return controller;\n                }\n                const newProps = controller.props.map(prop => {\n                    if(prop.name !== action.prop.name){\n                        return prop;\n                    }\n                    return Object.assign({}, prop, action.prop);\n                });\n                return {\n                    selector: controller.selector,\n                    props: newProps\n                }\n            });\n            const newObject = {\n                css: {\n                    initial: style.css.initial,\n                    controllers\n                }\n            };\n            return Object.assign({}, style, newObject);\n        default: return style;\n    }\n}\n\nexport default StyleReducer;","import { combineReducers } from 'redux';\n\nimport StyleReducer from './StyleReducer';\n\nexport default combineReducers({\n    StyleReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './data/reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}